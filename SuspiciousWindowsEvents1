#powershell bypass attempts, to drop malware on a disk "living off the land" style
index=* sourcetype=WinEventLog EventCode=4688  (powershell* AND -ExecutionPolicy) OR (powershell* AND bypass) OR (powershell*
AND -noprofile) | eval Message=split(Message,".") | eval Short_Message=mvindex(Message,0) | table _time, host,
Account_Name, Process_Name, Process_ID, Process_Command_Line, New_Process_Name, New_Process_ID,
Creator_Process_ID, Short_Message. Caller_Computer_Name, Security_ID, src_nt_host, user
|  sort result

#PossiblePasswordSpraying
index=* sourcetype=WinEventLog  EventCode=4771 
| stats values(user),dc(user) as Distinct by src_ip 
| where Distinct>2 
| sort Distinct

#login attempts to accounts that do not exist
index=wineventlog sourcetype="WinEventLog"
EventCode=4625 Sub_Status=0xC0000064 Account_Name!=*$$$$ NOT user=*$$ | eval
Date=strftime(_time, "%m/%d/%Y") | eval uacct=mvindex(Account_Name,1) |
stats count by Date, user, Workstation_Name host name | rename count as "Attempts"
| sort -Date -Attempts | rename user as "Target Account" host as "Host"

#login attempts to accounts that are disabled
index=wineventlog sourcetype="WinEventLog"
EventCode=4625 (Sub_Status=0xC0000072 OR Sub_Status=0xC0000193) | eval
Account_Name=mvindex(Account_Name, 1) | where !like(Account_Name,"%$$")
| eval Date=strftime(_time, "%m/%d/%Y") | stats count by Date, Account_Name,
Workstation_Name, Failure_Reason | sort -Date -count | rename Account_Name
as "Target Account" Workstation_Name as "Target Workstation" Failure_Reason
as "Failure Reason" count as "Count"

#accounts locked out- is user OOO? or is this a brute force attempt?
index=wineventlog sourcetype="WinEventLog"
EventCode=4625 (Sub_Status=0xC0000072 OR Sub_Status=0xC0000193) | eval
Account_Name=mvindex(Account_Name, 1) | where !like(Account_Name,"%$$")
| eval Date=strftime(_time, "%m/%d/%Y") | stats count by Date, Account_Name,
Workstation_Name, Failure_Reason | sort -Date -count | rename Account_Name
as "Target Account" Workstation_Name as "Target Workstation" Failure_Reason
as "Failure Reason" count as "Count"

#audit log cleared
index=wineventlog sourcetype=WinEventLog (EventCode=1102 OR EventCode=104)

#changes to sensitive AD groups (tailor towards your organization's sensitive groups)
Index=wineventlog * "IMPORTANT GROUPS" OR Administrators OR "Domain Admins" OR
"Enterprise Admins" OR "Schema Admins" OR "Backup Operators" OR
"Account Operators" OR "Print Operators" OR "Group Policy" OR DnsAdmins
OR "DHCP Administrators" OR "Remote Desktop Users" AND EventCode=4728
OR EventCode=4729 OR EventCode=4732 OR EventCode=4733 OR
EventCode=4756 OR EventCode=4757 | eval
source_user=mvindex(Account_Name, 0) | eval
affected_user=mvindex(Security_ID,1) | eval Time=strftime(_time,"%m/%d/%Y
%H:%M:%S") | table Time, source_user, affected_user, ComputerName,
Group_Name, EventCodeDescription | sort - Time | rename source_user as
"Changed By" affected_user as "Affected User" Group_Name as "Group Name"
status as "Action Taken"

#Lateral Movement Past 3 Hours bc of Logon on more than 1 DC
index=wineventlog sourcetype=WinEventLog LogName=Security (EventCode=4624 OR EventCode=4672) Logon_Type=3  NOT 
(host=“DC1.com" OR host=“DC2.com" ) NOT (Account_Name="*$$" OR Account_Name="ANONYMOUS LOGON")
| stats  count  BY dest src_ip dest_nt_domain user EventCode 
| where Host_Count > 2

#Use this query for elevated priv accounts- it identifies writing and deleting system files
#do a visual to find spikes in day to day activity by replacing the last 2 pipe commands with |  timechart count by user
index=wineventlog sourcetype=WinEventLog (EventCode=4660 OR EventCode=4663)
user="AdminCorp" OR user="adminBob"
| table user, host, Message, _time
| stats Values(Message) by user

#this is another elevated priv account query- identifes event where action=failure (this wil generate ALOT of noise, but with time and baseline setting it can be enhanced)
index = wineventlog action=failure user="AdminCorp" OR user="adminAlice"
|  table Account_Name, Message, EventCode, _time

#Known living off the land techniques, i.e using standard tools to conduct recon
#You do not need to alert on all processes launching, just suspicious ones or ones known to be used by threat actors, be aware of who is running what and why (exempt as needed)
index=wineventlog sourcetype=WinEventLog  EventCode=4688 NOT (Account_Name=*$$) (at.exe OR bcdedit.exe OR chcp.exe OR
cmd.exe OR cscript.exe OR ipconfig.exe OR mimikatz.exe OR nbtstat.exe OR nc.exe OR netcat.exe OR netstat.exe OR
nmap OR nslookup.exe OR bcp.exe OR sqlcmd.exe OR OSQL.exe OR ping.exe OR powershell.exe OR powercat.ps1 OR
psexec.exe OR psexecsvc.exe OR psLoggedOn.exe OR procdump.exe OR rar.exe OR reg.exe OR route.exe OR runas.exe
OR sc.exe OR schtasks.exe OR sethc.exe OR ssh.exe OR sysprep.exe OR systeminfo.exe OR system32\\net.exe OR
tracert.exe OR vssadmin.exe OR whoami.exe OR winrar.exe OR wscript.exe OR winrm.* OR winrs.* OR wmic.exe OR
wsmprovhost.exe OR net.exe) | eval Message=split(Message,".") | eval Short_Message=mvindex(Message,0)
|  table _time, host,
Account_Name, New_Process_Name, New_Process_ID,
Creator_Process_ID, Short_Message

#using word or excel to start cmd.exe or wscript.exe
index=wineventlog sourcetype=WinEventLog (cmd.exe) EventCode=4688
    [search sourcetype=wineventlog:security (WINWORD OR EXCEL) EventCode=4688 
         | dedup New_Process_ID 
         | rename New_Process_ID as Creator_Process_ID 
         | fields Creator_Process_ID ]
| table _time,Account_Name,ComputerName,Creator_Process_ID,New_Process_Name,Process_Command_Line
